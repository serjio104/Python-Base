"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и
вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и
отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class MyException:
    def __init__(self,my_list):
        self.my_list = []

    def fill_list(self):
        while True:
            try:
                number = input('Введите число : ')
                if float(number):
                    self.my_list.append(number)
                    print(f'Добавлен {number}  Текущий список - {self.my_list} \n ')
            except ValueError:
                if number.lower() == 'stop'.lower():
                    return f'Выход из цикла'
                else:
                    print(f'Вводить можно только числалибо "stop"')


my_except = MyException([])
print(my_except.fill_list())
