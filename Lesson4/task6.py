"""
6. Реализовать два небольших скрипта:
а) итератор, генерирующий целые числа, начиная с указанного,
б) итератор, повторяющий элементы некоторого списка, определенного заранее.

Подсказка: использовать функцию count() и cycle() модуля itertools.
Обратите внимание, что создаваемый цикл не должен быть бесконечным.
Необходимо предусмотреть условие его завершения.

Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл.
Во втором также необходимо предусмотреть условие, при котором повторение элементов списка будет прекращено.
"""
from itertools import count
from itertools import cycle

# вариант а
"""
Функция count()
Это итератор, возвращающий равномерно распределённые переменные с числа, переданного как стартовый параметр.
Допускается указывать значения шага.
"""
print(f'Функция count()')
for el in count(3, 1):
    if el > 10:
        break
    else:
        print(el)

# вариант б
"""
Функция cycle()
Это функция, создающая итератор для формирования бесконечного цикла набора значения.
"""
print(f'Функция cycle()')
counter = 0
for el in cycle("ABCDE"):
    if counter > 15:
        break
    print(el)
    counter += 1

print(f'Функция cycle()')

my_list = ['python', 'java', 'perl', 'javascript', 'c#', 'perl']
el = cycle(my_list)
print(next(el))
counter = 0
while counter < 10:
    print(next(el))
    counter += 1
