"""
5. Реализовать формирование списка, используя функцию range() и возможности генератора.
В список должны войти четные числа от 100 до 1000 (включая границы).
Необходимо получить результат вычисления произведения всех элементов списка.

Функция reduce принимает 2 аргумента: функцию и последовательность.
reduce() последовательно применяет функцию-аргумент к элементам списка, возвращает единичное значение.
"""

from functools import reduce


def product_numbers(product, el):
    return product * el


my_list = [el for el in range(100, 1001) if el % 2 == 0]
print(f'четные числа от 100 до 1000 (включая границы) : \n{my_list}')

# 1 вариант
sum_all1 = reduce(lambda el1, el2: el1 * el2, my_list)
print(f'результат вычисления произведения всех элементов списка : \n{sum_all1}')

# 2 вариант
sum_all2 = reduce(product_numbers, my_list)
print(f'результат вычисления произведения всех элементов списка : \n{sum_all2}')

# 3 вариант для проверки генератора СОВСЕМ ТУПО
sum_all3 = 1
for el in my_list:
    sum_all3 *= el
print(f'результат вычисления произведения всех элементов списка : \n{sum_all3}')
