"""
1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.

Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.

Подсказка: сложение элементов матриц выполнять поэлементно —
первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
    def __init__(self,my_list):
        self.my_list = my_list

    def __str__(self):
        return '\n'.join(map(str,self.my_list))

    # можно так
    # def __str__(self):
    #     return str('\n'.join(['\t'.join([str(el) for el in i]) for i in self.my_list]))

    # можно так
    # def __str__(self):
    #     for row in self.my_list:
    #         for i in row:
    #             print(f'{i:3}',end='')
    #         print()
    #     return ''
    def __add__(self,other):
        for i in range(len(self.my_list)):
            for j in range(len(other.my_list[i])):
                self.my_list[i][j] = self.my_list[i][j] + other.my_list[i][j]
        return Matrix.__str__(self)


mat1 = Matrix([[9,8,7],[6,5,4],[3,2,1]])
mat2 = Matrix([[1,2,3],[4,5,6],[7,8,9]])
print(mat1.__add__(mat2))
